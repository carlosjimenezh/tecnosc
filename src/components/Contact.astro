---
// import Card from './Card.astro';
import Button from './Button.astro';
---

<section id="contacto" class="bg-[#002147] py-20">
  <div class="container mx-auto max-w-2xl px-2 py-10">
    <!-- <Card> -->
      <h1 class="text-white font-bold text-2xl md:text-3xl mb-4 text-center">Contáctanos</h1>
      <!-- formulario de contacto -->
      <form id="contact-form" class="relative">
        <label for="name" class="relative text-white">Nombre:
          <input name="name" type="text" value="" id="name" class="bg-white text-gray-700 font-medium block p-2 border border-gray-300 rounded-lg w-full mb-10">
          <p class="error text-xs md:text-md text-red-400 hidden absolute bottom-10 w-max break-words font-medium">Ingrese un nombre válido (solo letras y espacios)</p>
        </label>
        <label for="email" class="relative text-white">Email:
          <input name="email" type="email" value="" id="email" class="bg-white text-gray-700 font-medium block p-2 border border-gray-300 rounded-lg w-full mb-10">
          <p class="error text-xs md:text-md text-red-400 hidden absolute bottom-10 w-max font-medium break-words">Ingrese un email válido (ejemplo@gmail.com)</p>
        </label>
        <label for="message" class="text-white">Mensaje:
          <textarea name="message" id="message" rows="10" class="bg-white text-gray-700 font-medium block p-2 border border-gray-300 rounded-lg w-full mb-10"></textarea>
        </label>
        <Button customClass="w-full">Enviar</Button>
      </form>
    <!-- </Card> -->
  </div>
</section>





<script>
import Swal from 'sweetalert2';
const nameInput = document.querySelector('#name')
const emailInput = document.querySelector('#email')
document.querySelector('#contact-form')?.addEventListener('submit', (e) => {
  e.preventDefault()
  // validar inputs
  const validName = validateInput(nameInput, /^[a-zA-ZÀ-ÿ\s]{3,80}$/)
  const validEmail = validateInput(emailInput, /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$/)
  const formValid = validName && validEmail
  if (!formValid) {
    nameInput?.addEventListener('keyup', () => {validateInput(nameInput, /^[a-zA-ZÀ-ÿ\s]{3,80}$/)})
    emailInput?.addEventListener('keyup', () => {validateInput(emailInput, /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$/)})
    Swal.fire({
      title: 'Error',
      text: 'Por favor, complete los campos correctamente.',
      icon: 'error',
      confirmButtonText: 'Aceptar'
    })
    return
  }
  // enviar formulario  
  Swal.fire({
    title: 'Enviando...',
    text: 'Por favor, espere un momento.',
    allowOutsideClick: false,
    allowEscapeKey: false,
    didOpen: () => {
      Swal.showLoading();
    }
  })
  //fetch email service
  const endpoint = 'https://formspree.io/f/mjkornjr'
  
  fetch (endpoint, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({
      name: nameInput.value,
      email: emailInput.value,
      message: document.querySelector('#message')?.value
    })
  })
    .then( response => {
      if (response.ok) {
        return response.json()
      } else {
        console.error('Error al enviar el formulario', response.statusText)
        Swal.fire({
          title: 'Error',
          text: 'Hubo un problema al enviar tu mensaje. Por favor, inténtalo de nuevo más tarde.',
          icon: 'error',
          confirmButtonText: 'Aceptar'
        })
      }
    })
    .then (data => {
      if (data.ok) {
        Swal.fire({
          title: 'Éxito',
          text: 'Tu mensaje ha sido enviado correctamente.',
          icon: 'success',
          confirmButtonText: 'Aceptar'
        })
        document.querySelector('#contact-form')?.reset()
      } else {
        Swal.fire({
          title: 'Error',
          text: 'Hubo un problema al enviar tu mensaje. Por favor, inténtalo de nuevo más tarde.',
          icon: 'error',
          confirmButtonText: 'Aceptar'
        })
      }
    })
})


function validateInput (input, regex) {
  const { value } = input
  const error = input.parentNode.querySelector('.error')
  if (regex.test(value)) {
    input.classList.remove("invalid")
    error?.classList.add("hidden")
    return true
  }
  input.classList.add("invalid")
  error?.classList.remove("hidden")
  return false
}
</script>
